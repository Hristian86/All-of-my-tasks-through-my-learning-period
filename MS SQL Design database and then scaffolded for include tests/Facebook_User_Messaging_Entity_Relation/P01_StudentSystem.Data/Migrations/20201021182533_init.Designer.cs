// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using P01_StudentSystem.Data;

namespace P01_StudentSystem.Data.Migrations
{
    [DbContext(typeof(StudentSystemContext))]
    [Migration("20201021182533_init")]
    partial class init
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.1")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("P01_StudentSystem.Data.Data.Conversation", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Ip")
                        .HasColumnName("ip")
                        .HasColumnType("nchar(20)")
                        .IsFixedLength(true)
                        .HasMaxLength(20);

                    b.Property<int>("UserOne")
                        .HasColumnName("user_one")
                        .HasColumnType("int");

                    b.Property<int>("UserTwo")
                        .HasColumnName("user_two")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("UserOne");

                    b.HasIndex("UserTwo");

                    b.ToTable("Conversations");
                });

            modelBuilder.Entity("P01_StudentSystem.Data.Data.ConversationReply", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("ConversationId")
                        .HasColumnName("conversationId")
                        .HasColumnType("int");

                    b.Property<string>("Reply")
                        .HasColumnName("reply")
                        .HasColumnType("nchar(100)")
                        .IsFixedLength(true)
                        .HasMaxLength(100);

                    b.Property<int>("UserId")
                        .HasColumnName("user_id")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ConversationId");

                    b.HasIndex("UserId");

                    b.ToTable("conversation_reply");
                });

            modelBuilder.Entity("P01_StudentSystem.Data.Data.User", b =>
                {
                    b.Property<int>("UserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("user_id")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .HasColumnType("nchar(100)")
                        .IsFixedLength(true)
                        .HasMaxLength(100);

                    b.HasKey("UserId");

                    b.ToTable("User");
                });

            modelBuilder.Entity("P01_StudentSystem.Data.Data.Conversation", b =>
                {
                    b.HasOne("P01_StudentSystem.Data.Data.User", "UserOneNavigation")
                        .WithMany("ConversationUserOneNavigation")
                        .HasForeignKey("UserOne")
                        .HasConstraintName("FK_Conversation_User1")
                        .IsRequired();

                    b.HasOne("P01_StudentSystem.Data.Data.User", "UserTwoNavigation")
                        .WithMany("ConversationUserTwoNavigation")
                        .HasForeignKey("UserTwo")
                        .HasConstraintName("FK_Conversation_User")
                        .IsRequired();
                });

            modelBuilder.Entity("P01_StudentSystem.Data.Data.ConversationReply", b =>
                {
                    b.HasOne("P01_StudentSystem.Data.Data.Conversation", "Conversation")
                        .WithMany("ConversationReply")
                        .HasForeignKey("ConversationId")
                        .HasConstraintName("FK_conversation_reply_conversation_reply")
                        .IsRequired();

                    b.HasOne("P01_StudentSystem.Data.Data.User", "User")
                        .WithMany("ConversationReply")
                        .HasForeignKey("UserId")
                        .HasConstraintName("FK_conversation_reply_User")
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
